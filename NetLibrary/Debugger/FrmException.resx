<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>